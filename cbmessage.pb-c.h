/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cbmessage.proto */

#ifndef PROTOBUF_C_cbmessage_2eproto__INCLUDED
#define PROTOBUF_C_cbmessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _CBMessage CBMessage;


/* --- enums --- */

typedef enum _CBMessage__Type {
  CBMESSAGE__TYPE__Request = 0,
  CBMESSAGE__TYPE__Response = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CBMESSAGE__TYPE)
} CBMessage__Type;
typedef enum _CBMessage__Method {
  CBMESSAGE__METHOD__Copy = 0,
  CBMESSAGE__METHOD__Paste = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CBMESSAGE__METHOD)
} CBMessage__Method;

/* --- messages --- */

struct  _CBMessage
{
  ProtobufCMessage base;
  CBMessage__Type type;
  CBMessage__Method method;
  uint32_t region;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  protobuf_c_boolean has_size;
  uint32_t size;
  protobuf_c_boolean has_status;
  protobuf_c_boolean status;
};
#define CBMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cbmessage__descriptor) \
    , CBMESSAGE__TYPE__Request, CBMESSAGE__METHOD__Copy, 0, 0, {0,NULL}, 0, 0, 0, 0 }


/* CBMessage methods */
void   cbmessage__init
                     (CBMessage         *message);
size_t cbmessage__get_packed_size
                     (const CBMessage   *message);
size_t cbmessage__pack
                     (const CBMessage   *message,
                      uint8_t             *out);
size_t cbmessage__pack_to_buffer
                     (const CBMessage   *message,
                      ProtobufCBuffer     *buffer);
CBMessage *
       cbmessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cbmessage__free_unpacked
                     (CBMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CBMessage_Closure)
                 (const CBMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cbmessage__descriptor;
extern const ProtobufCEnumDescriptor    cbmessage__type__descriptor;
extern const ProtobufCEnumDescriptor    cbmessage__method__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cbmessage_2eproto__INCLUDED */
